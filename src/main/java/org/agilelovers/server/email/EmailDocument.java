package org.agilelovers.server.email;

import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import java.util.Date;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;


@Document("sayit-emails")
@Data
@Builder
@AllArgsConstructor
public class EmailDocument {
    @ApiModelProperty(notes = "Unique ID generated by MongoDB")
    @Id
    private String id;

    @ApiModelProperty(notes = "Timestamp this question was created at")
    @CreatedDate
    private Date createdDate;

    @ApiModelProperty(notes = "User ID associated with this email", required = true)
    @NotNull
    @NotBlank
    private String userId;

    @ApiModelProperty(notes = "The email prompt used to generate the body", required = true)
    @NotNull
    @NotBlank
    private String prompt;

    // Attach display name to end
    @ApiModelProperty(notes = "The body of the email", required = true)
    @NotNull
    @NotBlank
    private String body;
}

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
class ReducedEmailDocument {
    @ApiModelProperty(notes = "Unique ID generated by MongoDB")
    private String id;

    // Need to give what breaks and what doesn't break based off sendEmail() errors (if any)
    @ApiModelProperty(notes = "confirmation of whether or not email was successfully sent")
    private String confirmationOfEmailSent;

    @ApiModelProperty(notes = "Email of the user draft was sent to")
    private String emailOfUserSentTowards;
}

